rnorm(1000)
rnorm(10000)
.Liobpaths
.libPaths()
.libPaths( c( .libPaths(), "c:/users/gareth/documents/RLibrary/") )
.libPaths()
.libPaths()
require(slidify)
install.packages("slidify")
install.packages('devtools')
require(slidify)
install_github('slidify', ramnathv)
require(devtools)
install_github('slidify', ramnathv)
install_github('slidify', 'ramnathv)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
require(slidify)
setwd("C:/gr/sources/csra-datasci-dataproducts")
author('project')
library(knitr)
slidify('index.Rmd')
browseURL('index.md')
browseURL('index.rmd')
browseURL('index.html')
require(shiny)
install.packages('shiny')
shiny::runApp('C:/gr/sources/csra-datasci-dataproducts/app')
setwd("C:/gr/sources/csra-datasci-dataproducts/presso")
read.table('../app/data/quakes_raw.csv)
read.table('../app/data/quakes_raw.csv')
read.table('../app/data/quakes_raw.csv', header=T)
require(data.table)
install.packages("data.table")
require(data.table)
fread('../app/data/quakes_raw.csv', header=T)
fread('../app/data/quakes_raw.csv')
quakes_raw <- read.csv("C:/gr/sources/csra-datasci-dataproducts/app/data/quakes_raw.csv")
View(quakes_raw)
summary(quakes_raw)
nrow(quakes_raw)
quakes <- subset(quakes_raw, eventtype == 'earthquake')
nrow(quakes)
quakes_raw <- read.csv("C:/gr/sources/csra-datasci-dataproducts/app/data/quakes_raw.csv")
summary(quakes_raw)
quakes_raw <- subset(quakes_raw, eventtype == 'earthquake')
summary(quakes_raw)
names(quakes_raw)
test <- quakes_raw[, c('public_id', 'origintime',
'longitude', 'latitude', 'magnitude', 'depth')]
test <- quakes_raw[, c('publicid', 'origintime',
'longitude', 'latitude', 'magnitude', 'depth')]
head(test)
quakes <- quakes_raw[, c('publicid', 'origintime',
'longitude', 'latitude', 'magnitude', 'depth')]
head(quakes)
setwd("C:/gr/sources/csra-datasci-dataproducts/app")
write.table('quakes.csv', row.names = F)
setwd("C:/gr/sources/csra-datasci-dataproducts")
write.table('/data/quakes.csv', row.names = F)
write.table(quakes, '/data/quakes.csv', row.names = F)
write.table(quakes, 'data/quakes.csv', row.names = F)
write.table(quakes, 'app/data/quakes.csv', row.names = F)
quakes <- read.csv('data/quakes.csv')
getwd()
setwd("C:/gr/sources/csra-datasci-dataproducts/app")
setwd("C:/gr/sources/csra-datasci-dataproducts/app")
quakes <- read.csv('data/quakes.csv')
head(quakes)
write.table(quakes, 'app/data/quakes.csv', row.names = F, sep=',')
write.table(quakes, 'data/quakes.csv', row.names = F, sep=',')
quakes <- read.csv('data/quakes.csv')
head(quakes)
quakes <- read.table('data/quakes.csv', sep=',')
head(quakes)
quakes <- read.table('data/quakes.csv', header=T, sep=',')
head(quakes)
